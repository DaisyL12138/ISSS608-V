[
  {
    "objectID": "in-class/in-class-4.html",
    "href": "in-class/in-class-4.html",
    "title": "In Class Ex-4",
    "section": "",
    "text": "pacman::p_load(DT,plotly,tidyverse,patchwork,ggiraph,ggstatsplot,readxl, performance, parameters, see)\n\n\nexam<- read_csv(\"Exam_data.csv\")\n\n\nplot_ly(data = exam, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE, \n        colors = \"Set1\") \n\n\n\n\n\n\npal <- c(\"pink\", \"purple\", \"blue\", \"green\") #<<\n\nplot_ly(data = exam, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE, \n        colors = pal) \n\n\n\n\n\n\nplot_ly(data = exam, \n        x = ~ENGLISH, \n        y = ~MATHS,\n        text = ~paste(\"Student ID:\", ID,     #<<\n                      \"<br>Class:\", CLASS),  #<<\n        color = ~RACE, \n        colors = \"Set1\")\n\n\n\n\n\n\np <- ggplot(data=exam, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p) \n\n\n\n\n\n\np <- ggplot(data=exam, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, #<<\n        data_id = CLASS),#<<              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                    \n\n\n\n\n\n\nexam$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam$ID))\n\np <- ggplot(data=exam, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              #<<\n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\ncar_resale <- read_xls(\"ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]"
  },
  {
    "objectID": "take-home-ex/take-home-1/take-home-01.html",
    "href": "take-home-ex/take-home-1/take-home-01.html",
    "title": "Take Home Ex 01",
    "section": "",
    "text": "The Procedures\n\n\n\nSteps\nScreenshot\n\n\n\n\n\nLoad the popdata.csv file into Tableau Desktop.\n\n\n\n\n\nIn order to create the age-sex pyramid, we need the age group,which is the discrete value, instead of continuous value.So, from the ‘data source’ panel, right click on the ‘PA’ and click on ‘create group’. The criteria to make groups is referred to website PopulationPyramid.Net\n\n\n\n\n\nFrom ‘Data’ panel, click on the little downside triangle, and click on ‘create parameter’.\n\n\n\n\n\nCreate a new parameter called ‘female’, which is the total population of female.\n\n\n\n\n\nCreate a new parameter called ‘male’,which is the total population of male.\n\n\n\n\n\nDrag ‘female’and ’male’ to Columns, ‘PA’ and ‘Age (group)’ to Rows, drag ‘Sex’to colour.Then right click on the title ’PA’ and click on ‘sort’, choose sort by ‘Field’, in descending order and field name is ‘pop’ which is the total population.\n\n\n\n\n\nThen, right click on ‘PA’, click ‘Filter’. Choose the top 9 area with the highest population.\n\n\n\n\n\nRight click on ‘Age (group)’, then click ‘Filter’. Check ‘Null’ and check ‘Exclude’.\n\n\n\n\n\nClick on ‘Data’ at the top of the window, then choose ‘Extract Data’.\n\n\n\n\n\nClick on ‘Extract’\n\n\n\n\n\nClick on ‘Server’ at the top, choose ‘Tableau Public’,then ‘Save to Tableau Public’.\n\n\n\n\n\nIf not satisfied, click on ‘Color’ under Marks card, click ‘Edit Colors’, then pick more pretty ones.\n\n\n\n\n\nClick on white space of the ‘PA’ column, click on ‘Format’, and give a shading to this column.\nPublic again."
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html",
    "href": "take-home-ex/take-home-2/take-home-2.html",
    "title": "take-home-2",
    "section": "",
    "text": "This take-home exercise is done based on a take-home exercise 1 submission prepared by a classmate. The peer submission will be critiqued in terms of clarity and aesthetics, and the original design will be remade using the data visualization principles and best practice learnt in Lesson 1 and 2.\nThe dataset used is downloaded from Department of Statistics, Singapore, and processed by RStudio tidyverse family of packages and visualized by ggplot2 and its extensions."
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#installing-packages-and-loading-libraries",
    "href": "take-home-ex/take-home-2/take-home-2.html#installing-packages-and-loading-libraries",
    "title": "take-home-2",
    "section": "2.1 Installing packages and loading libraries",
    "text": "2.1 Installing packages and loading libraries\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#import-data",
    "href": "take-home-ex/take-home-2/take-home-2.html#import-data",
    "title": "take-home-2",
    "section": "2.2 Import data",
    "text": "2.2 Import data\n\npopdata <- read_csv(\"popdata.csv\")\nhead(popdata,10)\n\n# A tibble: 10 × 6\n   PA         SZ                     Age   Sex       Pop  Time\n   <chr>      <chr>                  <chr> <chr>   <dbl> <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Centre 0     Males      10  2022\n 2 Ang Mo Kio Ang Mo Kio Town Centre 0     Females    10  2022\n 3 Ang Mo Kio Ang Mo Kio Town Centre 1     Males      20  2022\n 4 Ang Mo Kio Ang Mo Kio Town Centre 1     Females    10  2022\n 5 Ang Mo Kio Ang Mo Kio Town Centre 2     Males      20  2022\n 6 Ang Mo Kio Ang Mo Kio Town Centre 2     Females    10  2022\n 7 Ang Mo Kio Ang Mo Kio Town Centre 3     Males      20  2022\n 8 Ang Mo Kio Ang Mo Kio Town Centre 3     Females    10  2022\n 9 Ang Mo Kio Ang Mo Kio Town Centre 4     Males      30  2022\n10 Ang Mo Kio Ang Mo Kio Town Centre 4     Females    30  2022"
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#change-the-data-type-of-age-from-strings-to-numeric",
    "href": "take-home-ex/take-home-2/take-home-2.html#change-the-data-type-of-age-from-strings-to-numeric",
    "title": "take-home-2",
    "section": "2.3 Change the data type of ‘Age’ from strings to numeric",
    "text": "2.3 Change the data type of ‘Age’ from strings to numeric\n\npopdata <- transform(popdata,Age=as.numeric(Age))"
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#group-age-in-to-age_group",
    "href": "take-home-ex/take-home-2/take-home-2.html#group-age-in-to-age_group",
    "title": "take-home-2",
    "section": "2.4 Group ‘Age’ in to ‘Age_group’",
    "text": "2.4 Group ‘Age’ in to ‘Age_group’\n\npopdata<-popdata%>%\n  mutate(Age_group = cut(Age, breaks = c(0,4,9,14,19,24,29,34,39,44,49,54,59,64,69,74,79,84,89),\n  include.lowest = TRUE,\n  include.highest=TRUE,\n  labels = c(\"0 to 4\", \"5 to 9\", \"10 to 14\", \"15 to 19\",\"20 to 24\",\"25 to 29\",\"30 to 34\",\"35 to 39\",\"40 to 44\",\"45 to 49\",\"50 to 54\",\"55 to 59\",\"60 to 64\",\"65 to 69\",\"70 to 74\",\"75 to 79\",\"80 to 84\",\"85 to 89\")\n                         \n                         ))\nhead(popdata,10)\n\n           PA                     SZ Age     Sex Pop Time Age_group\n1  Ang Mo Kio Ang Mo Kio Town Centre   0   Males  10 2022    0 to 4\n2  Ang Mo Kio Ang Mo Kio Town Centre   0 Females  10 2022    0 to 4\n3  Ang Mo Kio Ang Mo Kio Town Centre   1   Males  20 2022    0 to 4\n4  Ang Mo Kio Ang Mo Kio Town Centre   1 Females  10 2022    0 to 4\n5  Ang Mo Kio Ang Mo Kio Town Centre   2   Males  20 2022    0 to 4\n6  Ang Mo Kio Ang Mo Kio Town Centre   2 Females  10 2022    0 to 4\n7  Ang Mo Kio Ang Mo Kio Town Centre   3   Males  20 2022    0 to 4\n8  Ang Mo Kio Ang Mo Kio Town Centre   3 Females  10 2022    0 to 4\n9  Ang Mo Kio Ang Mo Kio Town Centre   4   Males  30 2022    0 to 4\n10 Ang Mo Kio Ang Mo Kio Town Centre   4 Females  30 2022    0 to 4"
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#check-the-top-9-planing-area-with-the-most-population",
    "href": "take-home-ex/take-home-2/take-home-2.html#check-the-top-9-planing-area-with-the-most-population",
    "title": "take-home-2",
    "section": "2.5 Check the top 9 planing area with the most population",
    "text": "2.5 Check the top 9 planing area with the most population\n\npop=popdata %>% group_by(PA)  %>%\n                    summarise(Pop = sum(Pop),\n                              .groups = 'drop')\ntop_n(pop,9,Pop)\n\n# A tibble: 9 × 2\n  PA               Pop\n  <chr>          <dbl>\n1 Bedok         278970\n2 Bukit Batok   165280\n3 Choa Chu Kang 190780\n4 Hougang       227610\n5 Jurong West   258700\n6 Punggol       186270\n7 Sengkang      253250\n8 Woodlands     252570\n9 Yishun        223340"
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#filter-the-planing-area",
    "href": "take-home-ex/take-home-2/take-home-2.html#filter-the-planing-area",
    "title": "take-home-2",
    "section": "2.6 Filter the planing area",
    "text": "2.6 Filter the planing area\n\npopdata <-filter(popdata,PA %in% c(\"Bedok\",\"Jurong West\",\"Yishun\",\"Punggol\",'Bukit Batok',\"Woodlands\",\"Sengkang\",\"Hougang\",\"Choa Chu Kang\"))\npopdata <- popdata[!is.na(popdata$Age_group),]"
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#critique",
    "href": "take-home-ex/take-home-2/take-home-2.html#critique",
    "title": "take-home-2",
    "section": "3.1 Critique",
    "text": "3.1 Critique\nThe graph below is an Age-Sex Pyramid made by a classmate\n\nClarity\n\nThe graph is generally clear in terms of x-axis labels, planning area labels and overall layout. The audience is able to gasp the general trend of population distribution of each planning area.\nY-axis label ‘AG’ is an acronym, which is vague, can be improved by using ‘Age Group’. And the group name was compressed, this will bring problem for the audience.\nSome value labels are blocked and some groups have labels but others do not.\nThe ‘Column’ and ‘Row’ should be hided.\nThe title of the graph should be bold and bigger\n\nAesthetics\n\nColors chosen are clean and easily readable to the audience.\nThe planning area labels could be more clean."
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#remake",
    "href": "take-home-ex/take-home-2/take-home-2.html#remake",
    "title": "take-home-2",
    "section": "3.2 Remake",
    "text": "3.2 Remake\n\npop1 <-popdata %>% group_by(PA,Age_group,Sex)  %>%\n  summarise(Pop=sum(Pop),.groups='keep')\n\n\nggplot(data=pop1, \n       aes(x=Age_group,fill=Sex,\n           y = ifelse(test = Sex == \"Males\",\n                            yes = -Pop, no = Pop))) + \n geom_bar(stat = 'Identity',width = 0.8) +\n  scale_y_continuous(labels = abs, n.breaks=7,limits = max(pop1$Pop) * c(-1,1)) +\n  labs(x='Age Group',y = \"Population Amount\") + \n  coord_flip()+\n  facet_wrap(~ PA) +\n  ggtitle(\"Age-Sex Pyramid of 9 Planning Area in Singapore\") +\n  theme(plot.title = element_text(size=18,face='bold',hjust = 0.5),\n          panel.grid.major =element_blank(), \n          panel.grid.minor = element_blank(),\n          panel.background = element_blank(),\n          axis.title =  element_text(size=12,face = \"bold\"),\n          axis.text.y =   element_text(hjust = 1, \n                                        size=10),  \n                                        plot.margin=unit(rep(1,4),'cm'))+\n  geom_text(aes(label=Pop),\n            position = position_dodge2(width = 0.5, padding=0.3,preserve = 'single'), \n            vjust = 0.6, hjust = 0.5,size=3)\nggsave(\"1.png\", units=\"in\", dpi=300, width=12, height=12, device=\"png\")"
  }
]