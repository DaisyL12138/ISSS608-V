[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "Hands-on-Ex/Hands-on-Ex01/Hands-Ex01.html",
    "href": "Hands-on-Ex/Hands-on-Ex01/Hands-Ex01.html",
    "title": "Hands-Ex01",
    "section": "",
    "text": "pacman::p_load(tidyverse)\n\n\n\n\n#| eval: false\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=RACE))+\n  geom_bar()\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=15, \n                 boundary = 1,\n                 color=\"white\", \n                 fill=\"pink\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Homepage!\nIn this website,you will find my coursework prepared for this course."
  },
  {
    "objectID": "take-home-ex/take-home-1/take-home-01.html",
    "href": "take-home-ex/take-home-1/take-home-01.html",
    "title": "Take Home Ex 01",
    "section": "",
    "text": "The Procedures\n\n\n\nSteps\nScreenshot\n\n\n\n\n\nLoad the popdata.csv file into Tableau Desktop.\n\n\n\n\n\nIn order to create the age-sex pyramid, we need the age group,which is the discrete value, instead of continuous value.So, from the ‘data source’ panel, right click on the ‘PA’ and click on ‘create group’. The criteria to make groups is referred to website PopulationPyramid.Net\n\n\n\n\n\nFrom ‘Data’ panel, click on the little downside triangle, and click on ‘create parameter’.\n\n\n\n\n\nCreate a new parameter called ‘female’, which is the total population of female.\n\n\n\n\n\nCreate a new parameter called ‘male’,which is the total population of male.\n\n\n\n\n\nDrag ‘female’and ’male’ to Columns, ‘PA’ and ‘Age (group)’ to Rows, drag ‘Sex’to colour.Then right click on the title ’PA’ and click on ‘sort’, choose sort by ‘Field’, in descending order and field name is ‘pop’ which is the total population.\n\n\n\n\n\nThen, right click on ‘PA’, click ‘Filter’. Choose the top 9 area with the highest population.\n\n\n\n\n\nRight click on ‘Age (group)’, then click ‘Filter’. Check ‘Null’ and check ‘Exclude’.\n\n\n\n\n\nClick on ‘Data’ at the top of the window, then choose ‘Extract Data’.\n\n\n\n\n\nClick on ‘Extract’\n\n\n\n\n\nClick on ‘Server’ at the top, choose ‘Tableau Public’,then ‘Save to Tableau Public’.\n\n\n\n\n\nIf not satisfied, click on ‘Color’ under Marks card, click ‘Edit Colors’, then pick more pretty ones.\n\n\n\n\n\nClick on white space of the ‘PA’ column, click on ‘Format’, and give a shading to this column.\nPublic again."
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html",
    "href": "take-home-ex/take-home-2/take-home-2.html",
    "title": "take-home-2",
    "section": "",
    "text": "This take-home exercise is done based on a take-home exercise 1 submission prepared by a classmate. The peer submission will be critiqued in terms of clarity and aesthetics, and the original design will be remade using the data visualization principles and best practice learnt in Lesson 1 and 2.\nThe dataset used is downloaded from Department of Statistics, Singapore, and processed by RStudio tidyverse family of packages and visualized by ggplot2 and its extensions."
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#age-sex-pyramid-using-trellis-display",
    "href": "take-home-ex/take-home-2/take-home-2.html#age-sex-pyramid-using-trellis-display",
    "title": "take-home-2",
    "section": "3.1 Age-Sex Pyramid Using Trellis Display",
    "text": "3.1 Age-Sex Pyramid Using Trellis Display"
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#critique",
    "href": "take-home-ex/take-home-2/take-home-2.html#critique",
    "title": "take-home-2",
    "section": "3.1 Critique",
    "text": "3.1 Critique\nThe graph below is an Age-Sex Pyramid made by a classmate\n\nClarity\n\nThe graph is generally clear in terms of x-axis labels, planning area labels and overall layout. The audience is able to gasp the general trend of population distribution of each planning area.\nY-axis label 'AG' is an acronym, which is vague, can be improved by using ‘Age Group’. And the group name was compressed, this will bring problem for the audience.\nSome value labels are blocked and some groups have labels but others do not.\nThe ‘Column’ and ‘Row’ should be hided.\nThe title of the graph should be bold and bigger\n\nAesthetics\n\nColors chosen are clean and easily readable to the audience.\nThe planning area labels could be more clean."
  },
  {
    "objectID": "take-home-ex/take-home-2/take-home-2.html#remake",
    "href": "take-home-ex/take-home-2/take-home-2.html#remake",
    "title": "take-home-2",
    "section": "3.2 Remake",
    "text": "3.2 Remake\n\npop1 <-popdata %>% group_by(PA,Age_group,Sex)  %>%\n  summarise(Pop=sum(Pop),.groups='keep')\n\n\nggplot(data=pop1, \n       aes(x=Age_group,fill=Sex,\n           y = ifelse(test = Sex == \"Males\",\n                            yes = -Pop, no = Pop))) + \n geom_bar(stat = 'Identity',width = 0.8) +\n  scale_y_continuous(labels = abs, n.breaks=7,limits = max(pop1$Pop) * c(-1,1)) +\n  labs(x='Age Group',y = \"Population Amount\") + \n  coord_flip()+\n  facet_wrap(~ PA) +\n  ggtitle(\"Age-Sex Pyramid of 9 Planning Area in Singapore\") +\n  theme(plot.title = element_text(size=18,face='bold',hjust = 0.5),\n          panel.grid.major =element_blank(), \n          panel.grid.minor = element_blank(),\n          panel.background = element_blank(),\n          axis.title =  element_text(size=12,face = \"bold\"),\n          axis.text.y =   element_text(hjust = 1, \n                                        size=10),  \n                                        plot.margin=unit(rep(1,4),'cm'))+\n  geom_text(aes(label=Pop),\n            position = position_dodge2(width = 0.5, padding=0.3,preserve = 'single'), \n            vjust = 0.6, hjust = 0.5,size=3)\nggsave(\"1.png\", units=\"in\", dpi=300, width=12, height=12, device=\"png\")"
  }
]